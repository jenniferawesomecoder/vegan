{"version":3,"sources":["services/api-helper.js","components/LoginForm.jsx","components/RegisterForm.jsx","components/Header.jsx","components/MainPageUser.jsx","components/MainPage.jsx","components/CommentList.jsx","components/CreateComments.jsx","components/FullRecipe.jsx","components/UserRecipes.jsx","components/CreateRecipe.jsx","components/EditRecipe.jsx","components/UpdateUser.jsx","components/Footer.jsx","components/Gallery.jsx","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["api","axios","create","baseURL","registerUser","registerData","a","post","response","defaults","headers","common","authorization","data","token","localStorage","setItem","user","error","loginUser","loginData","verifyUser","authToken","get","putUser","user_id","userData","put","getAllRecipes","getOneRecipe","recipe_id","getAllUserRecipes","postRecipe","recipeData","putRecipe","deleteRecipe","delete","getAllComments","postComment","commentData","recipe_comment","deleteComment","comment_id","LoginForm","state","username","password","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","handleLogin","then","className","onSubmit","this","src","alt","htmlFor","placeholder","id","type","onChange","required","to","Component","RegisterForm","email","location","description","canBeSubmitted","length","isEnabled","handleRegister","disabled","Header","Veganite","onClick","handleToggle","MainPageUser","currentUserRecipes","allUserRecipes","userRecipes","componentDidMount","currentUser","image_url","handleLogout","href","map","recipe","key","title","style","background","React","MainPage","toggle","gridTemplateColumns","gridTemplateAreas","recipes","CommentList","comment","destroyComment","CreateComments","prevState","createComment","FullRecipe","oneRecipe","newComment","filter","ingredients","prep","handleDelete","UserRecipes","CreateRecipe","prevstate","createRecipe","row","resize","EditRecipe","handleEdit","UpdateUser","handleEditUser","Footer","images","f","source","Gallery","useState","selectedIndex","setSelectedIndex","lightboxIsOpen","setLightboxIsOpen","toggleLightbox","j","onClose","currentIndex","views","App","authErrorMessage","history","push","removeItem","handleVerify","readAllRecipes","sort","b","Date","createdAt","userId","newRecipe","parseInt","currentRecipe","formData","newUser","exact","path","render","match","params","withRouter","Boolean","window","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8174c760.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = \"https://veganite.herokuapp.com\"\n// const baseUrl = \"http://localhost:3000\"\n\nconst api = axios.create({\n  baseURL: baseUrl\n});\n\n// ============== Auth ================\nexport const registerUser = async (registerData) => {\n  try {\n    const response = await api.post('/users', registerData);\n    api.defaults.headers.common.authorization = `Bearer ${response.data.token}`;\n    localStorage.setItem('authToken', response.data.token);\n    return response.data.user;\n  } catch (e) {\n    return { error: \"Invalid Credentials\" };\n  }\n}\n\nexport const loginUser = async (loginData) => {\n  try {\n    const response = await api.post('/users/login', loginData, { headers: {} });\n    api.defaults.headers.common.authorization = `Bearer ${response.data.token}`;\n    localStorage.setItem('authToken', response.data.token);\n    return response.data.user;\n  } catch (e) {\n    return { error: \"Invalid Credentials\" };\n  }\n}\n\nexport const verifyUser = async () => {\n  const token = localStorage.authToken;\n\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n    const response = await api.get('/users/verify');\n    return response.data;\n  }\n  return false;\n}\n\nexport const putUser = async (user_id, userData) => {\n  const response = await api.put(`/users/${user_id}`, userData);\n  return response.data;\n}\n\n// ============== Recipes ================\nexport const getAllRecipes = async () => {\n  const response = await api.get('/recipes');\n  return response.data;\n}\n\nexport const getOneRecipe = async (recipe_id) => {\n  const response = await api.get(`/recipes/${recipe_id}`);\n  return response.data;\n}\n\nexport const getAllUserRecipes = async (user_id) => {\n  const response = await api.get(`/users/${user_id}/recipes`);\n  return response.data;\n}\n\nexport const postRecipe = async (user_id, recipeData) => {\n  const response = await api.post(`/users/${user_id}/recipes`, recipeData);\n  return response.data;\n}\n\nexport const putRecipe = async (recipe_id, recipeData) => {\n  const response = await api.put(`/recipes/${recipe_id}`, recipeData);\n  return response.data;\n}\n\nexport const deleteRecipe = async (recipe_id) => {\n  const response = await api.delete(`/recipes/${recipe_id}`);\n  return response.data;\n}\n\n// ============== Comments ================\n\nexport const getAllComments = async (recipe_id) => {\n  const response = await api.get(`/recipes/${recipe_id}/recipe_comments`)\n  return response.data\n}\n\nexport const postComment = async (recipe_id, user_id, commentData) => {\n  commentData.user_id = user_id\n  commentData.recipe_id = recipe_id\n  const response = await api.post(`/recipes/${recipe_id}/recipe_comments`, { recipe_comment: commentData });\n  return response.data\n}\n\nexport const putComment = async (comment_id, commentData) => {\n  const response = await api.put(`/recipes/:recipe_id/recipe_comments/${comment_id}`, commentData);\n  return response.data;\n}\n\nexport const deleteComment = async (comment_id) => {\n  const response = await api.delete(`/recipes/:recipe_id/recipe_comments/${comment_id}`);\n  return response.data;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    error: ''\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.handleLogin(this.state).then((response) => {\n      if (response.error) {\n        this.setState({ error: \"username or password invalid\" })\n      } else {\n        this.setState({ error: \"\" })\n      }\n\n      return response\n    })\n\n  }\n\n  render() {\n    return (\n      <form className=\"login-form\" onSubmit={this.handleSubmit}>\n        <img className=\"login-logo-image\" src=\"https://i.imgur.com/IoEQE0G.png\" alt=\"verdure logo\" />\n        <div className=\"sign-in-main\">\n          <div className=\"sign-in-header\">\n            <h2>Welcome Back</h2>\n          </div>\n          <div className=\"sign-in-grid\">\n          <p>{this.state.error}</p>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Username\"\n                name=\"username\"\n                id=\"username\"\n                type=\"text\"\n                value={this.state.username}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Password\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div>\n              <button id=\"submit\">SIGN IN</button>\n            </div>\n            <div className=\"sign-in-lower-grid\">\n              <p>Don't have an account?</p>\n              <Link to='/register'>\n                <p id=\"register-link\">SIGN UP NOW</p>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class RegisterForm extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    location: '',\n    description: '',\n    error: {}\n  }\n\n  canBeSubmitted = () => {\n    const { username, password } = this.state;\n    return (\n      username.length > 5 &&\n      password.length > 5\n    );\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n    if (name === 'username' && value.length < 5) {\n      this.setState({ error: { [name]: 'minimum 5 characters' } })\n    } else if (name === 'password' && value.length < 5) {\n      this.setState({ error: { [name]: 'minimum 5 characters' } })\n    } else {\n      this.setState({ error: {} })\n    }\n  }\n\n  render() {\n    const isEnabled = this.canBeSubmitted();\n\n    return (\n      <form className=\"register-form\" onSubmit={(event) => {\n        event.preventDefault()\n        this.props.handleRegister({ user: this.state })\n      }}>\n        <Link to=\"/\">\n          <img className=\"login-logo-image-two\" src=\"https://i.imgur.com/IoEQE0G.png\" alt=\"verdure logo\" />\n        </Link>\n        <div className=\"sign-in-main\">\n          <div className=\"sign-in-header\">\n            <h2>Register for a new account</h2>\n          </div>\n          <div className=\"sign-in-grid\">\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Username\"\n                name=\"username\"\n                id=\"username\"\n                type=\"text\"\n                value={this.state.username}\n                onChange={this.handleChange}\n                required\n              />\n              <p>{this.state.error.username}</p>\n            </div>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Email\"\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Password\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                required\n              />\n              <p>{this.state.error.password}</p>\n            </div>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"location\">Location</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Location\"\n                name=\"location\"\n                id=\"location\"\n                type=\"text\"\n                value={this.state.location}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"sign-in-input-div\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                className=\"sign-in-input\"\n                placeholder=\"Description\"\n                name=\"description\"\n                id=\"description\"\n                type=\"text\"\n                value={this.state.description}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div>\n              <button id=\"register\" disabled={!isEnabled}>Register</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Veganite from '../assets/logo.png'\n\nexport default function Header(props) {\n  return (\n    <header>\n      <img src={Veganite} alt=\"Veganite\" />\n\n      <Link to='/home'>\n      <p>Home</p>\n      </Link>\n      <Link to='/recipes'>\n        <p>Recipes</p>\n      </Link>\n      <Link to='gallery'>\n        <p>Gallery</p>\n      </Link>\n      <img className=\"login-image\" onClick={props.handleToggle} src=\"https://i.imgur.com/CgrWQMw.png\" alt=\"login button\" />\n    </header>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllUserRecipes } from '../services/api-helper';\n\nexport default class MainPageUser extends React.Component {\n  state = {\n    currentUserRecipes: []\n  }\n\n\n  allUserRecipes = async (id) => {\n    const userRecipes = await getAllUserRecipes(id)\n    this.setState({\n      currentUserRecipes: userRecipes\n    })\n  }\n\n  componentDidMount = () => {\n    this.allUserRecipes(this.props.currentUser.id)\n  }\n\n  render() {\n    return (\n      <div className=\"main-side\">\n        <div id=\"profile-top\" className=\"main-side-top\">\n          <div className=\"main-side-top-buttons\">\n            <div id=\"user-image\">\n              {this.props.currentUser.image_url === null ? <Link to={`/update_profile/${this.props.currentUser.id}`}><img src='https://i.imgur.com/HZPz2tu.png' alt=\"default user profile\" /></Link> : <Link to={`/update_profile/${this.props.currentUser.id}`}><img src={this.props.currentUser.image_url} alt=\"current user profile\" /></Link>}\n            </div>\n            {/*<h3 className=\"main-side-heading\">Representing {this.props.currentUser.location}</h3>*/}\n            <div className=\"main-side-buttons\">\n\n              <button onClick={this.props.handleLogout} className=\"small-button\">Logout</button>\n            </div>\n          </div>\n          <div className=\"sticky\">\n            <a className=\"sticky-anchor\" href=\"#profile-top\">\n              <h1>{this.props.currentUser.username}</h1>\n            </a>\n            <Link to=\"/recipes/new\">\n              <button>Create</button>\n            </Link>\n          </div>\n          <h1 className=\"black\">My Recipes</h1>\n          <div className=\"side-segment-grid\">\n            {\n              // [TBU] - After Edit; page needs refresh to show\n              this.state.currentUserRecipes &&\n              this.state.currentUserRecipes.map(recipe => (\n                <div className=\"main-container-segment\" key={recipe.id}>\n                  <div className=\"main-container-sub-segment\">\n                    <div className=\"container-segment\">\n                      <div className=\"card-segment\">\n                        <div className=\"face-segment face1-segment\">\n                          <div className=\"content-segment\">\n                            <div className=\"sub-segment-card-heading\">\n                              <h3>{recipe.title}</h3>\n                              {/* <h4>Chef: {recipe.user.username}</h4> */}\n                            </div>\n                          </div>\n                          <Link to={`/full_recipe/${recipe.id}`}>\n                            <button id={recipe.id} className=\"main-page-button-segment-info\">Cook</button>\n                          </Link>\n                        </div>\n                        <div className=\"face-segment face2-segment\" style={{ background: 'url(' + recipe.image_url + ')' }}>\n                          <h2 className=\"title-outline\">{recipe.title}</h2>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPageUser from './MainPageUser';\n\nexport default class MainPage extends React.Component {\n\n  render() {\n    const mainDivOne = {\n      gridTemplateColumns: '100%',\n      gridTemplateAreas: \"main\"\n    }\n\n    const mainDivTwo = {\n      gridTemplateColumns: '70% 30%',\n      gridTemplateAreas: \"main side\"\n    }\n\n    return (\n      <div className=\"main-div\" style={this.props.toggle ? mainDivTwo : mainDivOne}>\n        <div id=\"recipe-list\">\n          <h1>Take a look at our most recent recipes!</h1>\n          <div className=\"main-container-card-grid\">\n            {\n              // [TBU] - After Edit; page needs refresh to show\n              this.props.recipes &&\n              this.props.recipes.map(recipe => (\n                <div className=\"main-container\" key={recipe.id}>\n                  <div className=\"main-container-sub\">\n                    <div className=\"container\">\n                      <div className=\"card\">\n                        <div className=\"face face1\">\n                          <div className=\"content\">\n                            <div>\n                              <h2>Chef: {recipe.user.username}</h2>\n                              <p>{recipe.description}</p>\n                            </div>\n                          </div>\n                          <Link to={`/full_recipe/${recipe.id}`}>\n                            <button id={recipe.id} className=\"main-page-button\">Cook</button>\n                          </Link>\n                        </div>\n                        <div className=\"face face2\" style={{ background: 'url(' + recipe.image_url + ')' }}>\n                          <h2 className=\"title-outline\">{recipe.title}</h2>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n        {\n          this.props.currentUser && this.props.toggle &&\n          < MainPageUser handleLogout={this.props.handleLogout} currentUser={this.props.currentUser} currentUserRecipes={this.props.currentUserRecipes} />\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function CommentList(props) {\n  return (\n    <div className=\"comment-parent\">\n      {props.comment &&\n        props.comment.map(comment => (\n          comment.recipe_id === props.recipe_id && (\n            <div className=\"comment-wrapper\" key={comment.id}>\n              <p>{comment.comment}</p>\n              <button className=\"comment-delete\" onClick={() => props.destroyComment(comment.id)}>Delete Comment</button>\n            </div>\n          )))\n      }\n    </div>\n  )\n}","import React from 'react';\n\nexport default class CreateComments extends React.Component {\n  state = {\n    commentData: {\n      comment: ''\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState(prevState => ({\n      commentData: {\n        ...prevState.commentData,\n        [name]: value\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"comment-box\">\n        <form className=\"comment-form\" onSubmit={(event) => {\n          event.preventDefault()\n          this.props.createComment(this.props.recipe_id, this.props.currentUser.id, this.state.commentData)\n        }}>\n          <label id='comment-label' htmlFor=\"comment\">Comment</label>\n          <textarea\n            name=\"comment\"\n            id=\"comment\"\n            placeholder=\"Comments...\"\n            value={this.state.commentData.comment}\n            onChange={this.handleChange}\n          />\n          <button id='comment-button'>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllComments, postComment, deleteComment, getOneRecipe } from '../services/api-helper';\nimport CommentList from './CommentList';\nimport CreateComments from './CreateComments';\n\n\nexport default class FullRecipe extends React.Component {\n  state = {\n    comment: [],\n    oneRecipe: null\n  }\n\n  async componentDidMount() {\n    const oneRecipe = await getOneRecipe(this.props.id);\n    const comment = await getAllComments(this.props.id);\n    this.setState({\n      comment: comment,\n      oneRecipe: oneRecipe\n    })\n  }\n\n  createComment = async (recipe_id, user_id, commentData) => {\n    const newComment = await postComment(recipe_id, user_id, commentData);\n    this.setState(prevState => ({\n      comment: [...prevState.comment, newComment]\n    }))\n  }\n\n  destroyComment = async (comment_id) => {\n    await deleteComment(comment_id);\n    this.setState(prevState => ({\n      comment: prevState.comment.filter(comment => {\n        return comment.id !== comment_id\n      })\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        {\n          this.state.oneRecipe &&\n          <div id={this.state.oneRecipe.id} className='full-recipe-page'>\n            <h2 className=\"recipe-title\">{this.state.oneRecipe.title}</h2>\n            <div className='full-recipe-img'>\n              <img src={this.state.oneRecipe.image_url} alt=\"recipe final product\" />\n            </div>\n            <h3>Chef: <Link to={`/user_recipes/${this.state.oneRecipe.user.id}`}>{this.state.oneRecipe.user.username}</Link></h3>\n            <div className=\"full-recipe-content\">\n              <h3>Description</h3>\n              <p>{this.state.oneRecipe.description}</p>\n              <h3>Ingredients</h3>\n              <p>{this.state.oneRecipe.ingredients}</p>\n              <h3>Preparation</h3>\n              <p>{this.state.oneRecipe.prep}</p>\n            </div>\n            <div className=\"full-recipe-user-buttons\">\n              {this.state.oneRecipe.user.id === this.props.currentUser.id ? <button className=\"full-recipe-button-reach\" id={this.state.oneRecipe.id} onClick={this.props.handleDelete}>Delete Recipe</button> : null}\n              {this.state.oneRecipe.user.id === this.props.currentUser.id ? <Link to={`/edit/${this.state.oneRecipe.id}`}><button className=\"full-recipe-button-reach\" id={this.state.oneRecipe.id}>Edit Recipe</button></Link> : null}\n            </div>\n            <CreateComments createComment={this.createComment} recipe_id={this.state.oneRecipe.id} currentUser={this.props.currentUser} />\n            <CommentList destroyComment={this.destroyComment} comment={this.state.comment} recipe_id={this.state.oneRecipe.id} />\n          </div>\n        }\n      </>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllUserRecipes } from '../services/api-helper';\n\nexport default class UserRecipes extends React.Component {\n  state = {\n    currentUserRecipes: []\n  }\n\n  allUserRecipes = async (id) => {\n    const userRecipes = await getAllUserRecipes(id)\n    this.setState({\n      currentUserRecipes: userRecipes\n    })\n  }\n\n  componentDidMount = async () => {\n    this.allUserRecipes(this.props.id);\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.currentUserRecipes.map(recipe => (\n            <div className=\"user-recipes\" key={recipe.id}>\n              <div className=\"user-recipe-image-container\">\n                <img src={recipe.image_url} alt=\"recipe-post\" />\n              </div>\n              <div className=\"user-recipe-content-container\">\n                <h2>Chef: {recipe.user.username}</h2>\n                <p>{recipe.description}</p>\n                <Link to={`/full_recipe/${recipe.id}`}>\n                  <button>...read more!</button>\n                </Link>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class CreateRecipe extends React.Component {\n  state = {\n    recipeData: {\n      image_url: '',\n      title: '',\n      description: '',\n      ingredients: '',\n      prep: ''\n    }\n  }\n\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState(prevstate => ({\n      recipeData: {\n        ...prevstate.recipeData,\n        [name]: value\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <div className='create-recipe'>\n        <form id='create-recipe-form' onSubmit={(event) => {\n          event.preventDefault();\n          this.props.createRecipe(this.props.currentUser.id, this.state.recipeData)\n        }}>\n          <div className=\"sign-in-main\">\n            <div className=\"sign-in-header\">\n              <h2 id=\"create-form-title\">Create Recipe</h2>\n            </div>\n            <div className=\"sign-in-grid\">\n              <div className=\"sign-in-input-div\">\n                <label className='create-label' htmlFor=\"image_url\">Image URL</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"image_url\"\n                  id=\"image_url\"\n                  placeholder=\"Image URL\"\n                  value={this.state.image_url}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='create-label' htmlFor=\"title\">Title</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  placeholder=\"Title\"\n                  value={this.state.title}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='create-label' htmlFor=\"description\">Description</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  placeholder=\"Description\"\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='create-label' htmlFor=\"ingredients\">Ingredients</label>\n                <textarea\n                  className=\"sign-in-input\"\n                  name=\"ingredients\"\n                  id=\"ingredients\"\n                  placeholder=\"Ingredients\"\n                  row=\"12\"\n                  resize=\"true\"\n                  value={this.state.ingredients}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='create-label' htmlFor=\"prep\">Preparation</label>\n                <textarea\n                  className=\"sign-in-input\"\n                  name=\"prep\"\n                  id=\"prep\"\n                  placeholder=\"Preparation\"\n                  row=\"12\"\n                  resize=\"true\"\n                  value={this.state.prep}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div>\n                <button id='create-recipe-button'>Submit Recipe</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class EditRecipe extends React.Component {\n  state = {\n    recipeData: {\n      image_url: '',\n      title: '',\n      description: '',\n      ingredients: '',\n      prep: ''\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState(prevstate => ({\n      recipeData: {\n        ...prevstate.recipeData,\n        [name]: value\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <div className='edit-form'>\n        <form id='edit-recipe-form' onSubmit={(event) => {\n          event.preventDefault();\n          this.props.handleEdit(this.props.id, this.state.recipeData)\n        }}>\n          <div className=\"sign-in-main\">\n            <div className=\"sign-in-header\">\n              <h2 id='edit-form-title'>Edit Recipe</h2>\n            </div>\n            <div className=\"sign-in-grid\">\n              <div className=\"sign-in-input-div\">\n                <label className='edit-label' htmlFor=\"image_url\">Image URL</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"image_url\"\n                  id=\"image_url\"\n                  placeholder=\"Image URL\"\n                  value={this.state.recipeData.image_url}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='edit-label' htmlFor=\"title\">Title</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"title\"\n                  id=\"title\"\n                  placeholder=\"Title\"\n                  value={this.state.recipeData.title}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='edit-label' htmlFor=\"description\">Description</label>\n                <input className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  placeholder=\"Description\"\n                  value={this.state.recipeData.description}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='edit-label' htmlFor=\"ingredients\">Ingredients</label>\n                <textarea\n                  className=\"sign-in-input\"\n                  name=\"ingredients\"\n                  id=\"edit-ingredients\"\n                  row='12'\n                  resize='true'\n                  placeholder='Ingredients'\n                  value={this.state.recipeData.ingredients}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label className='edit-label' htmlFor=\"prep\">Preparation</label>\n                <textarea\n                  className=\"sign-in-input\"\n                  name=\"prep\"\n                  id=\"edit-prep\"\n                  row='12'\n                  resize='true'\n                  placeholder='Preparation'\n                  value={this.state.recipeData.prep}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button id='edit-recipe-button'>Edit Recipe</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class UpdateUser extends React.Component {\n  state = {\n    userData: {\n      email: '',\n      password: '',\n      image_url: '',\n      location: '',\n      description: ''\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState(prevstate => ({\n      userData: {\n        ...prevstate.userData,\n        [name]: value\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <div className='update-user'>\n        <form id='update-user-form' onSubmit={(event) => {\n          event.preventDefault();\n          this.props.handleEditUser(this.props.id, this.state.userData)\n        }}>\n          <div className=\"sign-in-main\">\n            <div className=\"sign-in-header\">\n              <h2 id=\"create-form-title\">Update Profile</h2>\n            </div>\n            <div className=\"sign-in-grid\">\n              <div className=\"sign-in-input-div\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Email@address.com\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  className=\"sign-in-input\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label htmlFor=\"image_url\">Image</label>\n                <input\n                  className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"image_url\"\n                  id=\"image\"\n                  placeholder=\"Insert Image URL\"\n                  value={this.state.image_url}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label htmlFor=\"location\">Location</label>\n                <input\n                  className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"location\"\n                  id=\"location\"\n                  placeholder=\"Enter Location\"\n                  value={this.state.location}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"sign-in-input-div\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  className=\"sign-in-input\"\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  placeholder=\"Description\"\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button id='update-user-button'>Update</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <>\n      <div className='footer'>\n        <div id=\"copyright\">\n          <p>info@veganite.com</p>\n        </div>\n      </div>\n\n      <div className='footer'>\n        {/*<div id='github'>\n          <a href=\"https://github.com/SmokinHawk/Project-Verdure\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\" alt=\"GitHub\" />\n          </a>\n        </div>*/}\n        <div id=\"copyright\">\n          <p>&copy; 2020 &mdash; Veganite | design by <a target=\"_blank\" href=\"https://jenniferawesomecoder.github.io/portfolio/\">Jennifer Miller</a></p>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst src = [\n  \"https://verduraphx.com/wp-content/uploads/2019/02/chickpea-chana.jpg\",\n  \"https://verduraphx.com/wp-content/uploads/2019/02/goth-waffles.jpg\",\n  \"https://verduraphx.com/wp-content/uploads/2019/02/poboy.jpg\"\n]\nconst images = src.map(f => ({source: f}))\n\nconst Gallery = () => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [lightboxIsOpen, setLightboxIsOpen] = useState(false);\n\n  const toggleLightbox = (j) => {\n    setLightboxIsOpen(!lightboxIsOpen);\n    setSelectedIndex(j);\n  };\n\n  return (\n    <div className=\"main-content\">\n      {src.map((f, j) => (\n        <div key={f} className=\"image-grid\" onClick={() =>  toggleLightbox(j)}>\n          <img className=\"image\" src={f} alt={f} />\n        </div>\n      ))}\n\n      <ModalGateway>\n        {lightboxIsOpen ? (\n          <Modal onClose={toggleLightbox}>\n            <Carousel\n              currentIndex={selectedIndex}\n              views={images}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  )\n}\n\nexport default Gallery\n","import React from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport { loginUser, registerUser, verifyUser, getAllRecipes, getAllUserRecipes, deleteRecipe, postRecipe, putRecipe, putUser } from './services/api-helper';\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport Header from './components/Header';\nimport MainPage from './components/MainPage';\nimport FullRecipe from './components/FullRecipe';\nimport UserRecipes from './components/UserRecipes';\nimport CreateRecipe from './components/CreateRecipe';\nimport EditRecipe from './components/EditRecipe';\nimport UpdateUser from './components/UpdateUser';\nimport Footer from './components/Footer';\nimport Gallery from './components/Gallery';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n      authErrorMessage: '',\n      recipes: [],\n      currentUserRecipes: [],\n      toggle: true\n    }\n  }\n\n  handleLogin = async (loginData) => {\n    const currentUser = await loginUser(loginData);\n    if (currentUser.error) {\n      this.setState({\n        authErrorMessage: currentUser.error\n      })\n    } else {\n      this.setState({ currentUser })\n      this.props.history.push('/recipes')\n    }\n\n    return currentUser;\n  }\n\n  handleRegister = async (registerData) => {\n    const currentUser = await registerUser(registerData)\n    if (currentUser.error) {\n      this.setState({\n        authErrorMessage: currentUser.error\n      })\n    } else {\n      this.setState({ currentUser })\n      this.props.history.push('/')\n    }\n  }\n\n  handleLogout = async () => {\n    this.setState({\n      currentUser: null\n    })\n    localStorage.removeItem('authToken');\n    this.props.history.push('/')\n  }\n\n  handleVerify = async () => {\n    const currentUser = await verifyUser();\n    if (currentUser) {\n      this.setState({ currentUser });\n    }\n    return currentUser;\n  }\n\n  readAllRecipes = async () => {\n    const recipes = await getAllRecipes();\n    recipes.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt)\n    })\n    this.setState({ recipes })\n  }\n\n  allUserRecipes = async (userId) => {\n    const userRecipes = await getAllUserRecipes(userId);\n    userRecipes.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    })\n    this.setState({\n      currentUserRecipes: userRecipes\n    })\n  }\n\n  async componentDidMount() {\n    const currentUser = await this.handleVerify();\n    await this.readAllRecipes();\n    if (currentUser) {\n      this.allUserRecipes(currentUser.id);\n    }\n  }\n\n  // =========== Forms ===========\n  createRecipe = async (user_id, recipeData) => {\n    const response = await postRecipe(user_id, recipeData);\n    const newRecipe = response\n    this.setState(prevState => ({\n      recipes: [newRecipe, ...prevState.recipes],\n      currentUserRecipes: [newRecipe, ...prevState.currentUserRecipes]\n    }))\n    this.props.history.push('/recipes')\n  }\n\n  handleDelete = async (event) => {\n    const id = event.target.id\n    await deleteRecipe(id)\n    this.setState(prevState => ({\n      recipes: [...prevState.recipes.filter(recipe => { return recipe.id !== parseInt(id) })],\n      currentUserRecipes: [...prevState.currentUserRecipes.filter(currentRecipe => { return currentRecipe.id !== parseInt(id) })]\n    }))\n    this.props.history.push('/recipes')\n  }\n\n  handleEdit = async (id, formData) => {\n    const newRecipe = await putRecipe(id, formData);\n    this.setState(prevState => ({\n      recipes: [...prevState.recipes.map(recipe => recipe.id === newRecipe.id ? newRecipe : recipe)],\n      currentUserRecipes: [...prevState.currentUserRecipes.map(currentRecipe => currentRecipe.id === newRecipe.id ? newRecipe : currentRecipe)]\n    }))\n    this.props.history.push(`/full_recipe/${id}`)\n  }\n\n  handleEditUser = async (id, formData) => {\n    const newUser = await putUser(id, formData);\n    this.setState(prevState => ({\n      currentUser: (prevState.currentUser.id === newUser.id ? newUser : this.state.currentUser)\n    }))\n    this.props.history.push('/recipes')\n  }\n\n  handleToggle = () => {\n    this.setState(prevState => ({\n      toggle: !this.state.toggle\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.currentUser ?\n            <Header handleToggle={this.handleToggle}/> : <div></div>\n        }\n\n        {\n          this.state.currentUser && this.state.recipes ?\n            <Route exact path=\"/recipes\" render={() => (<MainPage toggle={this.state.toggle} recipes={this.state.recipes} currentUser={this.state.currentUser} currentUserRecipes={this.state.currentUserRecipes} handleLogout={this.handleLogout} />)} /> :\n            <div></div>\n        }\n\n        <Route exact path=\"/\" render={() => (<LoginForm handleLogin={this.handleLogin} authErrorMessage={this.state.authErrorMessage} />)} />\n        <Route path='/register' render={() => (<RegisterForm handleRegister={this.handleRegister} authErrorMessage={this.state.authErrorMessage} />)} />\n\n        <Route path=\"/full_recipe/:id\" render={(props) => (<FullRecipe id={props.match.params.id} recipes={this.state.recipes} oneRecipe={this.state.oneRecipe} currentUserRecipes={this.state.currentUserRecipes} currentUser={this.state.currentUser} handleDelete={this.handleDelete} />)} />\n        <Route path=\"/user_recipes/:id\" render={(props) => (<UserRecipes allUserRecipes={this.allUserRecipes} id={props.match.params.id} />)} />\n\n        <Route path='/recipes/new' render={() => (<CreateRecipe currentUser={this.state.currentUser} createRecipe={this.createRecipe} />)} />\n        <Route path=\"/edit/:id\" render={(props) => (<EditRecipe id={props.match.params.id} handleChange={this.handleChange} handleEdit={this.handleEdit} currentUser={this.state.currentUser} />)} />\n        <Route path=\"/update_profile/:id\" render={(props) => (<UpdateUser id={props.match.params.id} currentUser={this.state.currentUser} handleEditUser={this.handleEditUser} />)} />\n        <Route path=\"/gallery\" render={(props) => (<Gallery />)} />\n        <Route path=\"/home\" render={(props) => (<Gallery />)} />\n        {\n          this.state.currentUser ?\n            <Footer /> : <></>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename=\"/vegan\">\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.63291ae6.png\";"],"sourceRoot":""}